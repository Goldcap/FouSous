minispade.register('ember-handlebars/helpers/debug', "(function() {// ==========================================================================\n// Project:   Ember Handlebars Views\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\n/*jshint debug:true*/\nminispade.require('ember-handlebars/ext');\n\nvar getPath = Ember.Handlebars.getPath, normalizePath = Ember.Handlebars.normalizePath;\n\n/**\n  `log` allows you to output the value of a value in the current rendering\n  context.\n\n      {{log myVariable}}\n\n  @name Handlebars.helpers.log\n  @param {String} property\n*/\nEmber.Handlebars.registerHelper('log', function(property, options) {\n  var context = (options.contexts && options.contexts[0]) || this,\n      normalized = normalizePath(context, property, options.data),\n      pathRoot = normalized.root,\n      path = normalized.path,\n      value = (path === 'this') ? pathRoot : getPath(pathRoot, path, options);\n  Ember.Logger.log(value);\n});\n\n/**\n  The `debugger` helper executes the `debugger` statement in the current\n  context.\n\n      {{debugger}}\n\n  @name Handlebars.helpers.debugger\n  @param {String} property\n*/\nEmber.Handlebars.registerHelper('debugger', function() {\n  debugger;\n});\n\n})();\n//@ sourceURL=ember-handlebars/helpers/debug");