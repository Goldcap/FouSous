minispade.register('ember-handlebars/helpers/outlet', "(function() {minispade.require('ember-handlebars/helpers/view');\n\nEmber.Handlebars.OutletView = Ember.ContainerView.extend(Ember._Metamorph);\n\n/**\n  The `outlet` helper allows you to specify that the current\n  view's controller will fill in the view for a given area.\n\n      {{outlet}}\n\n  By default, when the the current controller's `view`\n  property changes, the outlet will replace its current\n  view with the new view.\n\n      controller.set('view', someView);\n\n  You can also specify a particular name, other than view:\n\n      {{outlet masterView}}\n      {{outlet detailView}}\n\n  Then, you can control several outlets from a single\n  controller:\n\n      controller.set('masterView', postsView);\n      controller.set('detailView', postView);\n\n  @name Handlebars.helpers.outlet\n  @param {String} property the property on the controller\n    that holds the view for this outlet\n*/\nEmber.Handlebars.registerHelper('outlet', function(property, options) {\n  if (property && property.data && property.data.isRenderData) {\n    options = property;\n    property = 'view';\n  }\n\n  options.hash.currentViewBinding = \"controller.\" + property;\n\n  return Ember.Handlebars.helpers.view.call(this, Ember.Handlebars.OutletView, options);\n});\n\n})();\n//@ sourceURL=ember-handlebars/helpers/outlet");