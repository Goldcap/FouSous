minispade.register('ember-handlebars/controls/text_field', "(function() {// ==========================================================================\n// Project:   Ember Handlebars Views\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require(\"ember-handlebars/ext\");\nminispade.require(\"ember-views/views/view\");\nminispade.require(\"ember-handlebars/controls/text_support\");\n\nvar get = Ember.get, set = Ember.set;\n\n/**\n  @class\n\n  The `Ember.TextField` view class renders a text\n  [input](https://developer.mozilla.org/en/HTML/Element/Input) element. It\n  allows for binding Ember properties to the text field contents (`value`),\n  live-updating as the user inputs text.\n\n  Example:\n\n      {{view Ember.TextField valueBinding=\"firstName\"}}\n\n  ## Layout and LayoutName properties\n  Because HTML `input` elements are self closing `layout` and `layoutName` properties will\n  not be applied. See `Ember.View`'s layout section for more information.\n\n  @extends Ember.View\n  @extends Ember.TextSupport\n*/\nEmber.TextField = Ember.View.extend(Ember.TextSupport,\n  /** @scope Ember.TextField.prototype */ {\n\n  classNames: ['ember-text-field'],\n  tagName: \"input\",\n  attributeBindings: ['type', 'value', 'size'],\n\n  /**\n    The value attribute of the input element. As the user inputs text, this\n    property is updated live.\n\n    @type String\n    @default \"\"\n  */\n  value: \"\",\n\n  /**\n    The type attribute of the input element.\n\n    @type String\n    @default \"text\"\n  */\n  type: \"text\",\n\n  /**\n    The size of the text field in characters.\n\n    @type String\n    @default null\n  */\n  size: null\n});\n\n})();\n//@ sourceURL=ember-handlebars/controls/text_field");