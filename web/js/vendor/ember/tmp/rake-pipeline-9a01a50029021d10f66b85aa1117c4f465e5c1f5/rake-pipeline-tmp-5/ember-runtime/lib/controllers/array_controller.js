minispade.register('ember-runtime/controllers/array_controller', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/system/array_proxy');\nminispade.require('ember-runtime/controllers/controller');\nminispade.require('ember-runtime/mixins/sortable');\n\nvar get = Ember.get, set = Ember.set;\n\n/**\n  @class\n\n  Ember.ArrayController provides a way for you to publish a collection of objects\n  so that you can easily bind to the collection from a Handlebars #each helper,\n  an Ember.CollectionView, or other controllers.\n\n  The advantage of using an ArrayController is that you only have to set up\n  your view bindings once; to change what's displayed, simply swap out the\n  `content` property on the controller.\n\n  For example, imagine you wanted to display a list of items fetched via an XHR\n  request. Create an Ember.ArrayController and set its `content` property:\n\n      MyApp.listController = Ember.ArrayController.create();\n\n      $.get('people.json', function(data) {\n        MyApp.listController.set('content', data);\n      });\n\n  Then, create a view that binds to your new controller:\n\n      {{#each MyApp.listController}}\n        {{firstName}} {{lastName}}\n      {{/each}}\n\n  Although you are binding to the controller, the behavior of this controller\n  is to pass through any methods or properties to the underlying array. This\n  capability comes from `Ember.ArrayProxy`, which this class inherits from.\n\n  Note: As of this writing, `ArrayController` does not add any functionality\n  to its superclass, `ArrayProxy`. The Ember team plans to add additional\n  controller-specific functionality in the future, e.g. single or multiple\n  selection support. If you are creating something that is conceptually a\n  controller, use this class.\n\n  @extends Ember.ArrayProxy\n  @extends Ember.SortableMixin\n  @extends Ember.ControllerMixin\n*/\n\nEmber.ArrayController = Ember.ArrayProxy.extend(Ember.ControllerMixin,\n  Ember.SortableMixin);\n\n})();\n//@ sourceURL=ember-runtime/controllers/array_controller");