minispade.register('ember-runtime/mixins/freezable', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: ©2006-2011 Strobe Inc. and contributors.\n//            Portions ©2008-2010 Apple Inc. All rights reserved.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\n\n\n\n\nvar get = Ember.get, set = Ember.set;\n\n/**\n  @namespace\n\n  The Ember.Freezable mixin implements some basic methods for marking an object\n  as frozen. Once an object is frozen it should be read only. No changes\n  may be made the internal state of the object.\n\n  ## Enforcement\n\n  To fully support freezing in your subclass, you must include this mixin and\n  override any method that might alter any property on the object to instead\n  raise an exception. You can check the state of an object by checking the\n  isFrozen property.\n\n  Although future versions of JavaScript may support language-level freezing\n  object objects, that is not the case today. Even if an object is freezable,\n  it is still technically possible to modify the object, even though it could\n  break other parts of your application that do not expect a frozen object to\n  change. It is, therefore, very important that you always respect the\n  isFrozen property on all freezable objects.\n\n  ## Example Usage\n\n  The example below shows a simple object that implement the Ember.Freezable\n  protocol.\n\n        Contact = Ember.Object.extend(Ember.Freezable, {\n\n          firstName: null,\n\n          lastName: null,\n\n          // swaps the names\n          swapNames: function() {\n            if (this.get('isFrozen')) throw Ember.FROZEN_ERROR;\n            var tmp = this.get('firstName');\n            this.set('firstName', this.get('lastName'));\n            this.set('lastName', tmp);\n            return this;\n          }\n\n        });\n\n        c = Context.create({ firstName: \"John\", lastName: \"Doe\" });\n        c.swapNames();  => returns c\n        c.freeze();\n        c.swapNames();  => EXCEPTION\n\n  ## Copying\n\n  Usually the Ember.Freezable protocol is implemented in cooperation with the\n  Ember.Copyable protocol, which defines a frozenCopy() method that will return\n  a frozen object, if the object implements this method as well.\n\n  @extends Ember.Mixin\n  @since Ember 0.9\n*/\nEmber.Freezable = Ember.Mixin.create(\n/** @scope Ember.Freezable.prototype */ {\n\n  /**\n    Set to true when the object is frozen.  Use this property to detect whether\n    your object is frozen or not.\n\n    @type Boolean\n  */\n  isFrozen: false,\n\n  /**\n    Freezes the object.  Once this method has been called the object should\n    no longer allow any properties to be edited.\n\n    @returns {Object} receiver\n  */\n  freeze: function() {\n    if (get(this, 'isFrozen')) return this;\n    set(this, 'isFrozen', true);\n    return this;\n  }\n\n});\n\nEmber.FROZEN_ERROR = \"Frozen object cannot be modified.\";\n\n\n\n\n})();\n//@ sourceURL=ember-runtime/mixins/freezable");