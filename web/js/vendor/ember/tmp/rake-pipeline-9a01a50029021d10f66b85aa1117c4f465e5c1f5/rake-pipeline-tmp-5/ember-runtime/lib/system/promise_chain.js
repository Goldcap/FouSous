minispade.register('ember-runtime/system/promise_chain', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/system/object');\n\nvar get = Ember.get, set = Ember.set;\n\nEmber._PromiseChain = Ember.Object.extend({\n  promises: null,\n  failureCallback: Ember.K,\n  successCallback: Ember.K,\n  abortCallback: Ember.K,\n  promiseSuccessCallback: Ember.K,\n\n  /**\n    @private\n  */\n  runNextPromise: function() {\n    if (get(this, 'isDestroyed')) { return; }\n\n    var item = get(this, 'promises').shiftObject();\n    if (item) {\n      var promise = get(item, 'promise') || item;\n      Ember.assert(\"Cannot find promise to invoke\", Ember.canInvoke(promise, 'then'));\n\n      var self = this;\n\n      var successCallback = function() {\n        self.promiseSuccessCallback.call(this, item, arguments);\n        self.runNextPromise();\n      };\n\n      var failureCallback = get(self, 'failureCallback');\n\n      promise.then(successCallback, failureCallback);\n     } else {\n      this.successCallback();\n    }\n  },\n\n  start: function() {\n    this.runNextPromise();\n    return this;\n  },\n\n  abort: function() {\n    this.abortCallback();\n    this.destroy();\n  },\n\n  init: function() {\n    set(this, 'promises', Ember.A(get(this, 'promises')));\n    this._super();\n  }\n});\n\n\n})();\n//@ sourceURL=ember-runtime/system/promise_chain");