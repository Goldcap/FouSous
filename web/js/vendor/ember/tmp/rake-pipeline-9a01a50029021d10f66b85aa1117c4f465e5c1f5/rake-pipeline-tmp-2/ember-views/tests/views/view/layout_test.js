minispade.register('ember-views/~tests/views/view/layout_test', "(function() {var set = Ember.set, get = Ember.get;\n\nmodule(\"Ember.View - Layout Functionality\");\n\ntest(\"should call the function of the associated layout\", function() {\n  var view;\n  var templateCalled = 0, layoutCalled = 0;\n\n  view = Ember.View.create({\n    layoutName: 'layout',\n    templateName: 'template',\n\n    templates: {\n      template: function() {\n        templateCalled++;\n      },\n\n      layout: function() {\n        layoutCalled++;\n      }\n    }\n  });\n\n  Ember.run(function(){\n    view.createElement();\n  });\n\n  equal(templateCalled, 0, \"template is not called when layout is present\");\n  equal(layoutCalled, 1, \"layout is called when layout is present\");\n});\n\ntest(\"should call the function of the associated template with itself as the context\", function() {\n  var view;\n\n  view = Ember.View.create({\n    layoutName: 'test_template',\n\n    personName: \"Tom DAAAALE\",\n\n    templates: Ember.Object.create({\n      test_template: function(dataSource) {\n        return \"<h1 id='twas-called'>template was called for \" + get(dataSource, 'personName') + \"</h1>\";\n      }\n    })\n  });\n\n  Ember.run(function(){\n    view.createElement();\n  });\n\n  equal(\"template was called for Tom DAAAALE\", view.$('#twas-called').text(), \"the named template was called with the view as the data source\");\n});\n\ntest(\"should fall back to defaultTemplate if neither template nor templateName are provided\", function() {\n  var View, view;\n\n  View = Ember.View.extend({\n    defaultLayout: function(dataSource) { return \"<h1 id='twas-called'>template was called for \" + get(dataSource, 'personName') + \"</h1>\"; }\n  });\n\n  view = View.create({\n    personName: \"Tom DAAAALE\"\n  });\n\n  Ember.run(function(){\n    view.createElement();\n  });\n\n  equal(\"template was called for Tom DAAAALE\", view.$('#twas-called').text(), \"the named template was called with the view as the data source\");\n});\n\ntest(\"should not use defaultLayout if layout is provided\", function() {\n  var View, view;\n\n  View = Ember.View.extend({\n    layout:  function() { return \"foo\"; },\n    defaultLayout: function(dataSource) { return \"<h1 id='twas-called'>template was called for \" + get(dataSource, 'personName') + \"</h1>\"; }\n  });\n\n  view = View.create();\n  Ember.run(function(){\n    view.createElement();\n  });\n  \n\n  equal(\"foo\", view.$().text(), \"default layout was not printed\");\n});\n\ntest(\"the template property is available to the layout template\", function() {\n  var view = Ember.View.create({\n    template: function(context, options) {\n      options.data.buffer.push(\" derp\");\n    },\n\n    layout: function(context, options) {\n      options.data.buffer.push(\"Herp\");\n      get(context, 'template')(context, options);\n    }\n  });\n\n  Ember.run(function(){\n    view.createElement();\n  });\n\n  equal(\"Herp derp\", view.$().text(), \"the layout has access to the template\");\n});\n\n})();\n//@ sourceURL=ember-views/~tests/views/view/layout_test");