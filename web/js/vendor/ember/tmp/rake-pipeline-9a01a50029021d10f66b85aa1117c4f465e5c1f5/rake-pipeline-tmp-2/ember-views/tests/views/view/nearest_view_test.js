minispade.register('ember-views/~tests/views/view/nearest_view_test', "(function() {// ==========================================================================\n// Project:   Ember - JavaScript Application Framework\n// Copyright: Â©2006-2011 Apple Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nvar set = Ember.set, get = Ember.get;\n\nmodule(\"Ember.View nearest view helpers\");\n\ntest(\"collectionView should return the nearest collection view\", function() {\n  var itemViewChild;\n\n  var view = Ember.CollectionView.create({\n    content: Ember.A([1, 2, 3]),\n    isARealCollection: true,\n\n    itemViewClass: Ember.View.extend({\n      render: function(buffer) {\n        this.appendChild(Ember.View.create());\n      }\n    })\n  });\n\n  Ember.run(function() {\n    view.appendTo('#qunit-fixture');\n  });\n\n  itemViewChild = view.get('childViews')[0].get('childViews')[0];\n  equal(itemViewChild.get('collectionView.isARealCollection'), true, \"finds collection view in the hierarchy\");\n});\n\ntest(\"itemView should return the nearest child of a collection view\", function() {\n  var itemViewChild;\n\n  var view = Ember.CollectionView.create({\n    content: Ember.A([1, 2, 3]),\n\n    itemViewClass: Ember.View.extend({\n      isAnItemView: true,\n\n      render: function(buffer) {\n        this.appendChild(Ember.View.create());\n      }\n    })\n  });\n\n  Ember.run(function() {\n    view.appendTo('#qunit-fixture');\n  });\n\n  itemViewChild = view.get('childViews')[0].get('childViews')[0];\n  equal(itemViewChild.get('itemView.isAnItemView'), true, \"finds item view in the hierarchy\");\n});\n\ntest(\"itemView should return the nearest child of a collection view\", function() {\n  var itemViewChild;\n\n  var view = Ember.CollectionView.create({\n    content: Ember.A([1, 2, 3]),\n\n    itemViewClass: Ember.View.extend({\n      isAnItemView: true,\n\n      render: function(buffer) {\n        this.appendChild(Ember.View.create());\n      }\n    })\n  });\n\n  Ember.run(function() {\n    view.appendTo('#qunit-fixture');\n  });\n\n  itemViewChild = view.get('childViews')[0].get('childViews')[0];\n  equal(itemViewChild.get('contentView.isAnItemView'), true, \"finds a view with a content property in the hierarchy\");\n});\n\ntest(\"nearestWithProperty should search immediate parent\", function(){\n  var childView;\n\n  var view = Ember.View.create({\n    myProp: true,\n\n    render: function(buffer) {\n      this.appendChild(Ember.View.create());\n    }\n  });\n\n  Ember.run(function() {\n    view.appendTo('#qunit-fixture');\n  });\n\n  childView = view.get('childViews')[0];\n  equal(childView.nearestWithProperty('myProp'), view);\n\n});\n\n\n})();\n//@ sourceURL=ember-views/~tests/views/view/nearest_view_test");