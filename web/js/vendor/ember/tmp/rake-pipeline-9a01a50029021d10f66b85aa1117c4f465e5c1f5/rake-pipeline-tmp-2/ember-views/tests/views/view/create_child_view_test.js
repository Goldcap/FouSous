minispade.register('ember-views/~tests/views/view/create_child_view_test', "(function() {// ==========================================================================\n// Project:   Ember Views\n// Copyright: Â©2006-2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nvar set = Ember.set, get = Ember.get;\n\nvar view, myViewClass ;\n\nmodule(\"Ember.View#createChildView\", {\n  setup: function() {\n    view = Ember.View.create();\n    myViewClass = Ember.View.extend({ isMyView: true, foo: 'bar' });\n  }\n});\n\ntest(\"should create view from class with any passed attributes\", function() {\n  var attrs = { foo: \"baz\" };\n  var newView = view.createChildView(myViewClass, attrs);\n  ok(get(newView, 'isMyView'), 'newView is instance of myView');\n  equal(get(newView, 'foo'), 'baz', 'view did get custom attributes');\n  ok(!attrs.parentView, \"the original attributes hash was not mutated\");\n});\n\ntest(\"should set newView.parentView to receiver\", function() {\n  var newView = view.createChildView(myViewClass) ;\n  equal(get(newView, 'parentView'), view, 'newView.parentView == view');\n});\n\ntest(\"should create property on parentView to a childView instance if provided a viewName\", function() {\n  var attrs = { viewName: \"someChildView\" };\n  var newView = view.createChildView(myViewClass, attrs);\n\n  equal(get(view, 'someChildView'), newView);\n});\n\n})();\n//@ sourceURL=ember-views/~tests/views/view/create_child_view_test");