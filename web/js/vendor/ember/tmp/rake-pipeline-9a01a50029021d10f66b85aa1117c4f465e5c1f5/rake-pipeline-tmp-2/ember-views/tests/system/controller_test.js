minispade.register('ember-views/~tests/system/controller_test', "(function() {/*globals TestApp*/\n\nmodule(\"Ember.Controller#connectOutlet\", {\n  setup: function() {\n    Ember.run(function () {\n      window.TestApp = Ember.Application.create();\n    });\n\n\n    TestApp.ApplicationController = Ember.Controller.extend();\n\n    TestApp.PostController = Ember.Controller.extend();\n    TestApp.PostView = Ember.View.extend();\n  },\n\n  teardown: function() {\n    Ember.run(function () {\n      window.TestApp.destroy();\n    });\n    window.TestApp = undefined;\n  }\n});\n\ntest(\"connectOutlet instantiates a view, controller, and connects them\", function() {\n  var postController = Ember.Controller.create();\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController },\n    namespace: { PostView: TestApp.PostView }\n  });\n  var view = appController.connectOutlet('post');\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('view'), view, \"the app controller's view is set\");\n});\n\ntest(\"connectOutlet takes an optional outlet name\", function() {\n  var postController = Ember.Controller.create();\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController },\n    namespace: { PostView: TestApp.PostView }\n  });\n  var view = appController.connectOutlet({ name: 'post', outletName: 'mainView' });\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('mainView'), view, \"the app controller's view is set\");\n});\n\ntest(\"connectOutlet takes an optional controller context\", function() {\n  var postController = Ember.Controller.create(),\n      context = {};\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController },\n    namespace: { PostView: TestApp.PostView }\n  });\n  var view = appController.connectOutlet('post', context);\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('view'), view, \"the app controller's view is set\");\n  equal(view.get('controller.content'), context, \"the controller receives the context\");\n});\n\ntest(\"connectOutlet with outletName, name syntax\", function() {\n  var postController = Ember.Controller.create(),\n      context = {};\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController },\n    namespace: { PostView: TestApp.PostView }\n  });\n\n  var view = appController.connectOutlet('main', 'post', context);\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('main'), view, \"the app controller's view is set\");\n  equal(view.get('controller.content'), context, \"the controller receives the context\");\n});\n\ntest(\"connectOutlet works if all three parameters are provided\", function() {\n  var postController = Ember.Controller.create(),\n      context = {};\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController },\n    namespace: { PostView: TestApp.PostView }\n  });\n  var view = appController.connectOutlet({ name: 'post', outletName: 'mainView', context: context });\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('mainView'), view, \"the app controller's view is set\");\n  equal(view.get('controller.content'), context, \"the controller receives the context\");\n});\n\ntest(\"connectOutlet works if a hash of options is passed\", function() {\n  var postController = Ember.Controller.create(),\n      context = {};\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController }\n  });\n\n  var view = appController.connectOutlet({\n    outletName: 'mainView',\n    viewClass: TestApp.PostView,\n    controller: postController,\n    context: context\n  });\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), postController, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('mainView'), view, \"the app controller's view is set\");\n  equal(view.get('controller.content'), context, \"the controller receives the context\");\n});\n\ntest(\"if the controller is explicitly set to null while connecting an outlet, the instantiated view will inherit its controller from its parent view\", function() {\n  var postController = Ember.Controller.create(),\n      context = {};\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: { postController: postController }\n  });\n\n  var view = appController.connectOutlet({\n    outletName: 'mainView',\n    viewClass: TestApp.PostView,\n    controller: null\n  });\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), null, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('mainView'), view, \"the app controller's view is set\");\n\n  var containerView = Ember.ContainerView.create({\n    controller: postController\n  });\n\n  containerView.get('childViews').pushObject(view);\n  equal(view.get('controller'), postController, \"the controller was inherited from the parent\");\n});\n\ntest(\"if the controller is not given while connecting an outlet, the instantiated view will inherit its controller from its parent view\", function() {\n  var postController = Ember.Controller.create();\n\n  var appController = TestApp.ApplicationController.create({\n    controllers: {},\n    namespace: TestApp\n  });\n\n  var view = appController.connectOutlet('post');\n\n  ok(view instanceof TestApp.PostView, \"the view is an instance of PostView\");\n  equal(view.get('controller'), null, \"the controller is looked up on the parent's controllers hash\");\n  equal(appController.get('view'), view, \"the app controller's view is set\");\n\n  var containerView = Ember.ContainerView.create({\n    controller: postController\n  });\n\n  containerView.get('childViews').pushObject(view);\n  equal(view.get('controller'), postController, \"the controller was inherited from the parent\");\n});\n\n\ntest(\"connectControllers injects other controllers\", function() {\n  var postController = {}, commentController = {};\n\n  var controller = Ember.Controller.create({\n    controllers: {\n      postController: postController,\n      commentController: commentController\n    }\n  });\n\n  controller.connectControllers('post', 'comment');\n\n  equal(controller.get('postController'), postController, \"should connect postController\");\n  equal(controller.get('commentController'), commentController, \"should connect commentController\");\n});\n\ntest(\"can disconnect outlet from controller\", function() {\n  var appController = TestApp.ApplicationController.create({\n    controllers: {},\n    namespace: TestApp\n  });\n\n  var view = appController.connectOutlet('post');\n\n  equal(appController.get('view'), view, \"the app controller's view is set\");\n\n  appController.disconnectOutlet();\n\n  equal(appController.get('view'), null, \"the app controller's view is null\");\n\n  view = appController.connectOutlet({outletName: 'master', name: 'post'});\n\n  equal(appController.get('master'), view, \"the app controller's master view is set\");\n\n  appController.disconnectOutlet('master');\n\n  equal(appController.get('master'), null, \"the app controller's master view is null\");\n});\n\n})();\n//@ sourceURL=ember-views/~tests/system/controller_test");