minispade.register('ember-handlebars/~tests/helpers/outlet_test', "(function() {var appendView = function(view) {\n  Ember.run(function() { view.appendTo('#qunit-fixture'); });\n};\n\nvar compile = function(template) {\n  return Ember.Handlebars.compile(template);\n};\n\nvar view;\n\nmodule(\"Handlebars {{outlet}} helpers\", {\n  teardown: function() {\n    Ember.run(function () {\n      if (view) {\n        view.destroy();\n      }\n    });\n  }\n});\n\ntest(\"outlet should allow controllers to fill in slots\", function() {\n  var controller = Ember.Object.create();\n\n  var template = \"<h1>HI</h1>{{outlet}}\";\n  view = Ember.View.create({\n    controller: controller,\n    template: Ember.Handlebars.compile(template)\n  });\n\n  appendView(view);\n\n  equal(view.$().text(), 'HI');\n\n  Ember.run(function() {\n    controller.set('view', Ember.View.create({\n      template: compile(\"<p>BYE</p>\")\n    }));\n  });\n\n  equal(view.$().text(), 'HIBYE');\n});\n\ntest(\"outlet should allow controllers to fill in slots in prerender state\", function() {\n  var controller = Ember.Object.create({\n    view: Ember.View.create({\n      template: compile(\"<p>BYE</p>\")\n    })\n  });\n\n  var template = \"<h1>HI</h1>{{outlet}}\";\n  view = Ember.View.create({\n    controller: controller,\n    template: Ember.Handlebars.compile(template)\n  });\n\n  appendView(view);\n\n  equal(view.$().text(), 'HIBYE');\n});\n\n\ntest(\"outlet should support an optional name\", function() {\n  var controller = Ember.Object.create();\n\n  var template = \"<h1>HI</h1>{{outlet mainView}}\";\n  view = Ember.View.create({\n    controller: controller,\n    template: Ember.Handlebars.compile(template)\n  });\n\n  appendView(view);\n\n  equal(view.$().text(), 'HI');\n\n  Ember.run(function() {\n    controller.set('mainView', Ember.View.create({\n      template: compile(\"<p>BYE</p>\")\n    }));\n  });\n\n  equal(view.$().text(), 'HIBYE');\n});\n\n})();\n//@ sourceURL=ember-handlebars/~tests/helpers/outlet_test");