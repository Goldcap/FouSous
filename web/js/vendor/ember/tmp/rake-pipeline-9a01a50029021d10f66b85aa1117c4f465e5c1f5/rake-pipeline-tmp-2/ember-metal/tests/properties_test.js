minispade.register('ember-metal/~tests/properties_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nmodule('Ember.defineProperty');\n\ntest('toString', function() {\n\n  var obj = {};\n  Ember.defineProperty(obj, 'toString', undefined, function() { return 'FOO'; });\n  equal(obj.toString(), 'FOO', 'should replace toString');\n});\n\ntest(\"for data properties, didDefineProperty hook should be called if implemented\", function() {\n  expect(2);\n\n  var obj = {\n    didDefineProperty: function(obj, keyName, value) {\n      equal(keyName, 'foo', \"key name should be foo\");\n      equal(value, 'bar', \"value should be bar\");\n    }\n  };\n\n  Ember.defineProperty(obj, 'foo', undefined, \"bar\");\n});\n\ntest(\"for descriptor properties, didDefineProperty hook should be called if implemented\", function() {\n  expect(2);\n\n  var computedProperty = Ember.computed(Ember.K);\n\n  var obj = {\n    didDefineProperty: function(obj, keyName, value) {\n      equal(keyName, 'foo', \"key name should be foo\");\n      strictEqual(value, computedProperty, \"value should be passed descriptor\");\n    }\n  };\n\n  Ember.defineProperty(obj, 'foo', computedProperty);\n});\n\n\n})();\n//@ sourceURL=ember-metal/~tests/properties_test");