minispade.register('ember-metal/~tests/mixin/introspection_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\n// NOTE: A previous iteration differentiated between public and private props\n// as well as methods vs props.  We are just keeping these for testing; the\n// current impl doesn't care about the differences as much...\n\nvar PrivateProperty = Ember.Mixin.create({\n  _foo: '_FOO'\n});\n\nvar PublicProperty = Ember.Mixin.create({\n  foo: 'FOO'\n});\n\nvar PrivateMethod = Ember.Mixin.create({\n  _fooMethod: function() {}\n});\n\nvar PublicMethod = Ember.Mixin.create({\n  fooMethod: function() {}\n});\n\nvar BarProperties = Ember.Mixin.create({\n  _bar: '_BAR',\n  bar: 'bar'\n});\n\nvar BarMethods = Ember.Mixin.create({\n  _barMethod: function() {},\n  barMethod: function() {}\n});\n\nvar Combined = Ember.Mixin.create(BarProperties, BarMethods);\n\nvar obj ;\n\nmodule('Basic introspection', {\n  setup: function() {\n    obj = {};\n    Ember.mixin(obj, PrivateProperty, PublicProperty, PrivateMethod, PublicMethod, Combined);\n  }\n});\n\ntest('Ember.mixins()', function() {\n\n  function mapGuids(ary) {\n    return Ember.EnumerableUtils.map(ary, function(x) { return Ember.guidFor(x); });\n  }\n\n  deepEqual(mapGuids(Ember.Mixin.mixins(obj)), mapGuids([PrivateProperty, PublicProperty, PrivateMethod, PublicMethod, Combined, BarProperties, BarMethods]), 'should return included mixins');\n});\n\n})();\n//@ sourceURL=ember-metal/~tests/mixin/introspection_test");