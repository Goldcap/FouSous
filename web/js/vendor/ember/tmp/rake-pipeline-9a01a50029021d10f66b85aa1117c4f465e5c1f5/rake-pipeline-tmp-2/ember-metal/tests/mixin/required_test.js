minispade.register('ember-metal/~tests/mixin/required_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n/*globals setup raises */\n\nvar PartialMixin, FinalMixin, obj;\n\nmodule('Module.required', {\n  setup: function() {\n    PartialMixin = Ember.Mixin.create({\n      foo: Ember.required(),\n      bar: 'BAR'\n    });\n\n    FinalMixin = Ember.Mixin.create({\n      foo: 'FOO'\n    });\n\n    obj = {};\n  },\n\n  teardown: function() {\n    PartialMixin = FinalMixin = obj = null;\n  }\n});\n\ntest('applying a mixin with unmet requirement', function() {\n  raises(function() {\n    PartialMixin.apply(obj);\n  }, Error, 'should raise error for unmet requirement');\n});\n\ntest('applying a mixin with unmet requirement using applyPartial', function() {\n  PartialMixin.applyPartial(obj);\n  equal(obj.foo, null, 'obj.foo has required');\n\n  // applying regularly to object should throw\n  raises(function() {\n    Ember.Mixin.create({ bar: 'BAR' }).apply(obj);\n  }, Error, 'should raise error for unmet requirement');\n\n});\n\ntest('applying a mixin to meet requirement', function() {\n  FinalMixin.apply(obj);\n  PartialMixin.apply(obj);\n  equal(Ember.get(obj, 'foo'), 'FOO', 'should now be defined');\n});\n\ntest('combined mixins to meet requirement', function() {\n  Ember.Mixin.create(PartialMixin, FinalMixin).apply(obj);\n  equal(Ember.get(obj, 'foo'), 'FOO', 'should now be defined');\n});\n\ntest('merged mixin', function() {\n  Ember.Mixin.create(PartialMixin, { foo: 'FOO' }).apply(obj);\n  equal(Ember.get(obj, 'foo'), 'FOO', 'should now be defined');\n});\n\ntest('define property on source object', function() {\n  obj.foo = 'FOO';\n  PartialMixin.apply(obj);\n  equal(Ember.get(obj, 'foo'), 'FOO', 'should now be defined');\n});\n\ntest('using apply', function() {\n  Ember.mixin(obj, PartialMixin, { foo: 'FOO' });\n  equal(Ember.get(obj, 'foo'), 'FOO', 'should now be defined');\n});\n\n\n})();\n//@ sourceURL=ember-metal/~tests/mixin/required_test");