minispade.register('ember-metal/~tests/run_loop/schedule_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nmodule('system/run_loop/schedule_test');\n\ntest('scheduling item in queue should defer until finished', function() {\n  var cnt = 0;\n\n  Ember.run(function() {\n    Ember.run.schedule('actions', function() { cnt++; });\n    Ember.run.schedule('actions', function() { cnt++; });\n    equal(cnt, 0, 'should not run action yet') ;\n  });\n\n  equal(cnt, 2, 'should flush actions now');\n\n});\n\ntest('nested runs should queue each phase independently', function() {\n  var cnt = 0;\n\n  Ember.run(function() {\n    Ember.run.schedule('actions', function() { cnt++; });\n    equal(cnt, 0, 'should not run action yet') ;\n\n    Ember.run(function() {\n      Ember.run.schedule('actions', function() { cnt++; });\n    });\n    equal(cnt, 1, 'should not run action yet') ;\n\n  });\n\n  equal(cnt, 2, 'should flush actions now');\n\n});\n\ntest('prior queues should be flushed before moving on to next queue', function() {\n  var order = [];\n\n  Ember.run(function() {\n    Ember.run.schedule('sync', function() {\n      order.push('sync');\n    });\n    Ember.run.schedule('actions', function() {\n      order.push('actions');\n      Ember.run.schedule('actions', function() {\n        order.push('actions');\n      });\n      Ember.run.schedule('sync', function() {\n        order.push('sync');\n      });\n    });\n    Ember.run.schedule('timers', function() {\n      order.push('timers');\n    });\n  });\n\n  deepEqual(order, ['sync', 'actions', 'sync', 'actions', 'timers']);\n});\n\n})();\n//@ sourceURL=ember-metal/~tests/run_loop/schedule_test");