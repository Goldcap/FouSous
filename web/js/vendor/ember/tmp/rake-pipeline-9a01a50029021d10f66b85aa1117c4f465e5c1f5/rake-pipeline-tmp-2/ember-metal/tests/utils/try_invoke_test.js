minispade.register('ember-metal/~tests/utils/try_invoke_test', "(function() {// ==========================================================================\n// Project:   Ember Runtime\n// Copyright: Â©2012 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nvar obj;\n\nmodule(\"Ember.tryInvoke\", {\n  setup: function() {\n    obj = {\n      aMethodThatExists: function() { return true; },\n      aMethodThatTakesArguments: function(arg1, arg2) { return arg1 === arg2; }\n    };\n  },\n\n  teardown: function() {\n    obj = undefined;\n  }\n});\n\ntest(\"should return undefined when the object doesn't exist\", function() {\n  equal(Ember.tryInvoke(undefined, 'aMethodThatDoesNotExist'), undefined);\n});\n\ntest(\"should return undefined when asked to perform a method that doesn't exist on the object\", function() {\n  equal(Ember.tryInvoke(obj, 'aMethodThatDoesNotExist'), undefined);\n});\n\ntest(\"should return what the method returns when asked to perform a method that exists on the object\", function() {\n  equal(Ember.tryInvoke(obj, 'aMethodThatExists'), true);\n});\n\ntest(\"should return what the method returns when asked to perform a method that takes arguments and exists on the object\", function() {\n  equal(Ember.tryInvoke(obj, 'aMethodThatTakesArguments', [true, true]), true);\n});\n\n})();\n//@ sourceURL=ember-metal/~tests/utils/try_invoke_test");