minispade.register('ember-runtime/~tests/ext/mixin_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\n\nmodule('system/mixin/binding_test');\n\ntest('Defining a property ending in Binding should setup binding when applied', function() {\n\n  var MyMixin = Ember.Mixin.create({\n    fooBinding: 'bar.baz'\n  });\n\n  var obj = { bar: { baz: 'BIFF' } };\n  \n  Ember.run(function(){\n    MyMixin.apply(obj);\n  });\n  \n  ok(Ember.get(obj, 'fooBinding') instanceof Ember.Binding, 'should be a binding object');\n  equal(Ember.get(obj, 'foo'), 'BIFF', 'binding should be created and synced');\n\n});\n\ntest('Defining a property ending in Binding should apply to prototype children', function() {\n  var MyMixin, obj, obj2;\n  \n  Ember.run(function(){\n    MyMixin = Ember.Mixin.create({\n      fooBinding: 'bar.baz'\n    });\n  });\n\n  obj = { bar: { baz: 'BIFF' } };\n  \n  Ember.run(function(){\n    MyMixin.apply(obj);\n  });\n  \n  \n  obj2 = Ember.create(obj);\n  Ember.run(function(){\n    Ember.set(Ember.get(obj2, 'bar'), 'baz', 'BARG');\n  });\n  \n  \n  ok(Ember.get(obj2, 'fooBinding') instanceof Ember.Binding, 'should be a binding object');\n  equal(Ember.get(obj2, 'foo'), 'BARG', 'binding should be created and synced');\n\n});\n\n})();\n//@ sourceURL=ember-runtime/~tests/ext/mixin_test");