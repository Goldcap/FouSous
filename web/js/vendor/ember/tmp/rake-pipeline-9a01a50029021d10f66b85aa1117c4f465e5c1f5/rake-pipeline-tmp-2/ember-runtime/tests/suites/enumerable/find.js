minispade.register('ember-runtime/~tests/suites/enumerable/find', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/enumerable');\n\nvar suite = Ember.EnumerableTests;\n\n// ..........................................................\n// find()\n//\n\nsuite.module('find');\n\nsuite.test('find should invoke callback on each item as long as you return false', function() {\n  var obj = this.newObject(),\n      ary = this.toArray(obj),\n      found = [], result;\n\n  result = obj.find(function(i) { found.push(i); return false; });\n  equal(result, undefined, 'return value of obj.find');\n  deepEqual(found, ary, 'items passed during find() should match');\n});\n\nsuite.test('every should stop invoking when you return true', function() {\n  var obj = this.newObject(),\n      ary = this.toArray(obj),\n      cnt = ary.length - 2,\n      exp = cnt,\n      found = [], result;\n\n  result = obj.find(function(i) { found.push(i); return --cnt >= 0; });\n  equal(result, ary[exp-1], 'return value of obj.find');\n  equal(found.length, exp, 'should invoke proper number of times');\n  deepEqual(found, ary.slice(0,-2), 'items passed during find() should match');\n});\n\n// ..........................................................\n// findProperty()\n//\n\nsuite.module('findProperty');\n\nsuite.test('should return first object of property matches', function() {\n  var ary, obj;\n\n  ary = [\n    { foo: 'foo', bar: 'BAZ' },\n    Ember.Object.create({ foo: 'foo', bar: 'bar' })\n  ];\n\n  obj = this.newObject(ary);\n\n  equal(obj.findProperty('foo', 'foo'), ary[0], 'findProperty(foo)');\n  equal(obj.findProperty('bar', 'bar'), ary[1], 'findProperty(bar)');\n});\n\nsuite.test('should return first object with truthy prop', function() {\n  var ary, obj ;\n\n  ary = [\n    { foo: 'foo', bar: false },\n    Ember.Object.create({ foo: 'bar', bar: true })\n  ];\n\n  obj = this.newObject(ary);\n\n  // different values - all eval to true\n  equal(obj.findProperty('foo'), ary[0], 'findProperty(foo)');\n  equal(obj.findProperty('bar'), ary[1], 'findProperty(bar)');\n});\n\nsuite.test('should return first null property match', function() {\n  var ary, obj;\n\n  ary = [\n    { foo: null, bar: 'BAZ' },\n    Ember.Object.create({ foo: null, bar: null })\n  ];\n\n  obj = this.newObject(ary);\n\n  equal(obj.findProperty('foo', null), ary[0], \"findProperty('foo', null)\");\n  equal(obj.findProperty('bar', null), ary[1], \"findProperty('bar', null)\");\n});\n\nsuite.test('should return first undefined property match', function() {\n  var ary, obj;\n\n  ary = [\n    { foo: undefined, bar: 'BAZ' },\n    Ember.Object.create({ })\n  ];\n\n  obj = this.newObject(ary);\n\n  equal(obj.findProperty('foo', undefined), ary[0], \"findProperty('foo', undefined)\");\n  equal(obj.findProperty('bar', undefined), ary[1], \"findProperty('bar', undefined)\");\n});\n\n})();\n//@ sourceURL=ember-runtime/~tests/suites/enumerable/find");