minispade.register('ember-runtime/~tests/suites/enumerable/every', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/enumerable');\n\nvar suite = Ember.EnumerableTests;\n\n// ..........................................................\n// every()\n//\n\nsuite.module('every');\n\nsuite.test('every should should invoke callback on each item as long as you return true', function() {\n  var obj = this.newObject(),\n      ary = this.toArray(obj),\n      found = [], result;\n\n  result = obj.every(function(i) { found.push(i); return true; });\n  equal(result, true, 'return value of obj.every');\n  deepEqual(found, ary, 'items passed during every() should match');\n});\n\nsuite.test('every should stop invoking when you return false', function() {\n  var obj = this.newObject(),\n      ary = this.toArray(obj),\n      cnt = ary.length - 2,\n      exp = cnt,\n      found = [], result;\n\n  result = obj.every(function(i) { found.push(i); return --cnt>0; });\n  equal(result, false, 'return value of obj.every');\n  equal(found.length, exp, 'should invoke proper number of times');\n  deepEqual(found, ary.slice(0,-2), 'items passed during every() should match');\n});\n\n// ..........................................................\n// everyProperty()\n//\n\nsuite.module('everyProperty');\n\nsuite.test('should return true of every property matches', function() {\n  var obj = this.newObject([\n    { foo: 'foo', bar: 'BAZ' },\n    Ember.Object.create({ foo: 'foo', bar: 'bar' })\n  ]);\n\n  equal(obj.everyProperty('foo', 'foo'), true, 'everyProperty(foo)');\n  equal(obj.everyProperty('bar', 'bar'), false, 'everyProperty(bar)');\n});\n\nsuite.test('should return true of every property is true', function() {\n  var obj = this.newObject([\n    { foo: 'foo', bar: true },\n    Ember.Object.create({ foo: 'bar', bar: false })\n  ]);\n\n  // different values - all eval to true\n  equal(obj.everyProperty('foo'), true, 'everyProperty(foo)');\n  equal(obj.everyProperty('bar'), false, 'everyProperty(bar)');\n});\n\nsuite.test('should return true if every property matches null', function() {\n  var obj = this.newObject([\n    { foo: null, bar: 'BAZ' },\n    Ember.Object.create({ foo: null, bar: null })\n  ]);\n\n  equal(obj.everyProperty('foo', null), true, \"everyProperty('foo', null)\");\n  equal(obj.everyProperty('bar', null), false, \"everyProperty('bar', null)\");\n});\n\nsuite.test('should return true if every property is undefined', function() {\n  var obj = this.newObject([\n    { foo: undefined, bar: 'BAZ' },\n    Ember.Object.create({ bar: undefined })\n  ]);\n\n  equal(obj.everyProperty('foo', undefined), true, \"everyProperty('foo', undefined)\");\n  equal(obj.everyProperty('bar', undefined), false, \"everyProperty('bar', undefined)\");\n});\n\n})();\n//@ sourceURL=ember-runtime/~tests/suites/enumerable/every");