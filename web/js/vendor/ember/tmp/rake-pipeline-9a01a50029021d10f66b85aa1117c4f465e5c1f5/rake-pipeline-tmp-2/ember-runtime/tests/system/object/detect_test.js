minispade.register('ember-runtime/~tests/system/object/detect_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\n\nmodule('system/object/detect');\n\ntest('detect detects classes correctly', function() {\n\n  var A = Ember.Object.extend();\n  var B = A.extend();\n  var C = A.extend();\n\n  ok( Ember.Object.detect(Ember.Object), 'Ember.Object is an Ember.Object class' );\n  ok( Ember.Object.detect(A), 'A is an Ember.Object class' );\n  ok( Ember.Object.detect(B), 'B is an Ember.Object class' );\n  ok( Ember.Object.detect(C), 'C is an Ember.Object class' );\n\n  ok( !A.detect(Ember.Object), 'Ember.Object is not an A class' );\n  ok( A.detect(A), 'A is an A class' );\n  ok( A.detect(B), 'B is an A class' );\n  ok( A.detect(C), 'C is an A class' );\n\n  ok( !B.detect(Ember.Object), 'Ember.Object is not a B class' );\n  ok( !B.detect(A), 'A is not a B class' );\n  ok( B.detect(B), 'B is a B class' );\n  ok( !B.detect(C), 'C is not a B class' );\n\n  ok( !C.detect(Ember.Object), 'Ember.Object is not a C class' );\n  ok( !C.detect(A), 'A is not a C class' );\n  ok( !C.detect(B), 'B is not a C class' );\n  ok( C.detect(C), 'C is a C class' );\n\n});\n})();\n//@ sourceURL=ember-runtime/~tests/system/object/detect_test");