minispade.register('ember-runtime/~tests/suites/enumerable/map', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/enumerable');\n\nvar suite = Ember.EnumerableTests;\n\nsuite.module('map');\n\nfunction mapFunc(item) { return item ? item.toString() : null; }\n\nsuite.test('map should iterate over list', function() {\n  var obj = this.newObject(),\n      ary = Ember.EnumerableUtils.map(this.toArray(obj), mapFunc),\n      found = [];\n\n  found = obj.map(mapFunc);\n  deepEqual(found, ary, 'mapped arrays should match');\n});\n\n\nsuite.test('map should iterate over list after mutation', function() {\n  if (Ember.get(this, 'canTestMutation')) {\n    expect(0);\n    return ;\n  }\n\n  var obj = this.newObject(),\n      ary = this.toArray(obj).map(mapFunc),\n      found;\n\n  found = obj.map(mapFunc);\n  deepEqual(found, ary, 'items passed during forEach should match');\n\n  this.mutate(obj);\n  ary = this.toArray(obj).map(mapFunc);\n  found = obj.map(mapFunc);\n  deepEqual(found, ary, 'items passed during forEach should match');\n});\n\nsuite.test('2nd target parameter', function() {\n  var obj = this.newObject(), target = this;\n\n\n  obj.map(function() {\n    equal(Ember.guidFor(this), Ember.guidFor(window), 'should pass window as this if no context');\n  });\n\n  obj.map(function() {\n    equal(Ember.guidFor(this), Ember.guidFor(target), 'should pass target as this if context');\n  }, target);\n\n});\n\n\nsuite.test('callback params', function() {\n  var obj = this.newObject(),\n      ary = this.toArray(obj),\n      loc = 0;\n\n\n  obj.map(function(item, idx, enumerable) {\n    equal(item, ary[loc], 'item param');\n    equal(idx, loc, 'idx param');\n    equal(Ember.guidFor(enumerable), Ember.guidFor(obj), 'enumerable param');\n    loc++;\n  });\n\n});\n\n})();\n//@ sourceURL=ember-runtime/~tests/suites/enumerable/map");