minispade.register('ember-runtime/~tests/mixins/mutable_enumerable_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/mutable_enumerable');\n\nvar indexOf = Ember.EnumerableUtils.indexOf;\n\n/*\n  Implement a basic fake mutable array.  This validates that any non-native\n  enumerable can impl this API.\n*/\nvar TestMutableEnumerable = Ember.Object.extend(Ember.MutableEnumerable, {\n\n  _content: null,\n\n  addObject: function(obj) {\n    if (indexOf(this._content, obj)>=0) return this;\n    this.enumerableContentWillChange(null, [obj]);\n    this._content.push(obj);\n    this.enumerableContentDidChange(null, [obj]);\n  },\n\n  removeObject: function(obj) {\n    var idx = indexOf(this._content, obj);\n    if (idx<0) return this;\n\n    this.enumerableContentWillChange([obj], null);\n    this._content.splice(idx, 1);\n    this.enumerableContentDidChange([obj], null);\n    return this;\n  },\n\n  init: function(ary) {\n    this._content = ary || [];\n  },\n\n  nextObject: function(idx) {\n    return idx>=Ember.get(this, 'length') ? undefined : this._content[idx];\n  },\n\n  length: Ember.computed(function() {\n    return this._content.length;\n  }).property().cacheable(),\n\n  slice: function() {\n    return this._content.slice();\n  }\n});\n\n\nEmber.MutableEnumerableTests.extend({\n\n  name: 'Basic Mutable Array',\n\n  newObject: function(ary) {\n    ary = ary ? ary.slice() : this.newFixture(3);\n    return new TestMutableEnumerable(ary);\n  },\n\n  // allows for testing of the basic enumerable after an internal mutation\n  mutate: function(obj) {\n    obj.addObject(this.getFixture(1)[0]);\n  },\n\n  toArray: function(obj) {\n    return obj.slice();\n  }\n\n}).run();\n\n\n\n\n})();\n//@ sourceURL=ember-runtime/~tests/mixins/mutable_enumerable_test");