minispade.register('ember-runtime/~tests/mixins/mutable_array_test', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/mutable_array');\n\n/*\n  Implement a basic fake mutable array.  This validates that any non-native\n  enumerable can impl this API.\n*/\nvar TestMutableArray = Ember.Object.extend(Ember.MutableArray, {\n\n  _content: null,\n\n  init: function(ary) {\n    this._content = Ember.A(ary || []);\n  },\n\n  replace: function(idx, amt, objects) {\n\n    var args = objects ? objects.slice() : [],\n        removeAmt = amt,\n        addAmt    = args.length;\n\n    this.arrayContentWillChange(idx, removeAmt, addAmt);\n\n    args.unshift(amt);\n    args.unshift(idx);\n    this._content.splice.apply(this._content, args);\n    this.arrayContentDidChange(idx, removeAmt, addAmt);\n    return this;\n  },\n\n  objectAt: function(idx) {\n    return this._content[idx];\n  },\n\n  length: Ember.computed(function() {\n    return this._content.length;\n  }).property().cacheable(),\n\n  slice: function() {\n    return this._content.slice();\n  }\n\n});\n\n\nEmber.MutableArrayTests.extend({\n\n  name: 'Basic Mutable Array',\n\n  newObject: function(ary) {\n    ary = ary ? ary.slice() : this.newFixture(3);\n    return new TestMutableArray(ary);\n  },\n\n  // allows for testing of the basic enumerable after an internal mutation\n  mutate: function(obj) {\n    obj.addObject(this.getFixture(1)[0]);\n  },\n\n  toArray: function(obj) {\n    return obj.slice();\n  }\n\n}).run();\n\n\n\n\n})();\n//@ sourceURL=ember-runtime/~tests/mixins/mutable_array_test");