minispade.register('ember-runtime/~tests/suites/array/lastIndexOf', "(function() {// ==========================================================================\n// Project:  Ember Runtime\n// Copyright: Â©2011 Strobe Inc. and contributors.\n// License:   Licensed under MIT license (see license.js)\n// ==========================================================================\nminispade.require('ember-runtime/~tests/suites/array');\n\nvar suite = Ember.ArrayTests;\n\nsuite.module('lastIndexOf');\n\nsuite.test(\"should return index of object's last occurrence\", function() {\n  var expected = this.newFixture(3),\n      obj      = this.newObject(expected),\n      len      = 3,\n      idx;\n\n  for(idx=0;idx<len;idx++) {\n    equal(obj.lastIndexOf(expected[idx]), idx,\n      Ember.String.fmt('obj.lastIndexOf(%@) should match idx', [expected[idx]]));\n  }\n\n});\n\nsuite.test(\"should return index of object's last occurrence even startAt search location is equal to length\", function() {\n  var expected = this.newFixture(3),\n      obj      = this.newObject(expected),\n      len      = 3,\n      idx;\n\n  for(idx=0;idx<len;idx++) {\n    equal(obj.lastIndexOf(expected[idx], len), idx,\n      Ember.String.fmt('obj.lastIndexOfs(%@) should match idx', [expected[idx]]));\n  }\n\n});\n\nsuite.test(\"should return index of object's last occurrence even startAt search location is greater than length\", function() {\n  var expected = this.newFixture(3),\n      obj      = this.newObject(expected),\n      len      = 3,\n      idx;\n\n  for(idx=0;idx<len;idx++) {\n    equal(obj.lastIndexOf(expected[idx], len + 1), idx,\n      Ember.String.fmt('obj.lastIndexOf(%@) should match idx', [expected[idx]]));\n  }\n\n});\n\nsuite.test(\"should return -1 when no match is found\", function() {\n  var obj = this.newObject(this.newFixture(3)), foo = {};\n  equal(obj.lastIndexOf(foo), -1, 'obj.lastIndexOf(foo) should be -1');\n});\n\nsuite.test(\"should return -1 when no match is found even startAt search location is equal to length\", function() {\n  var obj = this.newObject(this.newFixture(3)), foo = {};\n  equal(obj.lastIndexOf(foo, obj.length), -1, 'obj.lastIndexOf(foo) should be -1');\n});\n\nsuite.test(\"should return -1 when no match is found even startAt search location is greater than length\", function() {\n  var obj = this.newObject(this.newFixture(3)), foo = {};\n  equal(obj.lastIndexOf(foo, obj.length + 1), -1, 'obj.lastIndexOf(foo) should be -1');\n});\n\n})();\n//@ sourceURL=ember-runtime/~tests/suites/array/lastIndexOf");